@model IEnumerable<Movie>

@{
    ViewData["Title"] = "List of Movies";
}
<style>
    .cover {
        width: 100%;
        height: 90vh;
        background-image:url("/media/cover.jpg");
        background-size:cover;
        padding:90px;
        position:relative;
        top:-70px;
        z-index:-1;
        background-repeat:no-repeat;
    }
    .cover > h1{
        padding-top:25vh;
        color:white;
    }
    .cover p{
        color:white;
    }
</style>
<div class="cover " >
    <h1>The Shawshank Redemption</h1>
    <p>Over the course of several years, two convicts form a friendship, <br />seeking consolation and, eventually, redemption through basic compassion. </p>
    <button class="btn btn-danger" >Explorer</button>
</div>
<div class="container-fluid">
<div class="row ">
    @foreach (var item in Model)
    {
        <div class="col-md-4 col-xs-6 mb-4">
            <div class="card border-primary">
                <div class="card-header text-white" style="background-image: url('@item.ImageURL'); background-size: cover;">
                    <h5 class="card-title">
                        @item.Name
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                        }
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <img src="@item.ImageURL" class="img-fluid rounded" alt="@item.Name">
                        </div>
                        <div class="col-md-6">
                            <p class="card-text">@item.Description</p>
                            <p class="card-text"><b>Cinema: </b>@item.Cinema.Name</p>
                            <p class="card-text"><b>Category: </b>@item.MovieCategory</p>
                            <p class="card-text"><b>Start Date: </b>@item.StartDate.ToString("dd MMM yy")</p>
                            <p class="card-text"><b>End Date: </b>@item.EndDate.ToString("dd MMM yy")</p>
                            <p class="card-text">
                                <b>Status: </b>
                                @if (DateTime.Now >= item.StartDate && DateTime.Now <= item.EndDate)
                                {
                                    <span class="badge bg-success text-white">AVAILABLE</span>
                                }
                                else if (DateTime.Now > item.EndDate)
                                {
                                    <span class="badge bg-danger text-white">EXPIRED</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary text-white">UPCOMING</span>
                                }
                            </p>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <p class="card-text">
                        <a class="btn btn-outline-primary float-right" asp-action="Details" asp-route-id="@item.Id">
                            <i class="bi bi-eye-fill"></i> Show Details
                        </a>
                        <a class="btn btn-success text-white @((DateTime.Now > item.EndDate) ? "disabled" : "")"
                           asp-controller="Orders"
                           asp-action="AddItemToShoppingCart"
                           asp-route-id="@item.Id">
                            <i class="bi bi-cart-plus"></i> Add to Cart (Price @item.Price.ToString("c"))
                        </a>
                    </p>
                </div>
            </div>
        </div>
    }
</div>
</div>

@await Html.PartialAsync("_CreateItem", "Movies") 